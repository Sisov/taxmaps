#!/usr/bin/env python 

################################################################################
### COPYRIGHT ##################################################################

# New York Genome Center

# SOFTWARE COPYRIGHT NOTICE AGREEMENT
# This software and its documentation are copyright (2014) by the New York
# Genome Center. All rights are reserved. This software is supplied without
# any warranty or guaranteed support whatsoever. The New York Genome Center
# cannot be responsible for its use, misuse, or functionality.

# Version: 0.1
# Author: Andre Corvelo

################################################################# /COPYRIGHT ###
################################################################################



################################################################################
### MODULES ####################################################################

from optparse import OptionParser
import sys, gzip

################################################################### /MODULES ###
################################################################################



################################################################################
### FUNCTIONS ##################################################################

################################################################# /FUNCTIONS ###
################################################################################



################################################################################
### ARGUMENTS,OPTIONS ##########################################################

parser = OptionParser(usage = "\n%prog [options]", version = "%prog 0.1")

parser.add_option(
	"-1",
	metavar = "FILE",
	type = "string",
	dest = "r1_file",
	default = None,
	help = "Read 1 filename (mandatory, .fq, .fastq, .fq.gz, .fastq.gz)"
	)

parser.add_option(
	"-2",
	metavar = "FILE",
	type = "str",
	dest = "r2_file",
	default = None,
	help = "Read 2 filename. (mandatory, .fq, .fastq, .fq.gz, .fastq.gz)"
	)

(opt, args) = parser.parse_args()

if opt.r1_file == None or opt.r2_file == None:
	parser.print_help()
	sys.exit(-1)

######################################################### /ARGUMENTS,OPTIONS ###
################################################################################



################################################################################
### CONSTANTS ##################################################################

################################################################# /CONSTANTS ###
################################################################################



################################################################################
### MAIN #######################################################################
			
if __name__ == "__main__":
	if opt.r1_file[-3:] == '.gz':
		r1_file = gzip.open(opt.r1_file, 'r')
	else: 
		r1_file = open(opt.r1_file, 'r')
	if opt.r2_file[-3:] == '.gz':
		r2_file = gzip.open(opt.r2_file, 'r')
	else: 
		r2_file = open(opt.r2_file, 'r')
	while True:
		for t in xrange(4):
			l1 = r1_file.readline()	
			sys.stdout.write(l1)
		for t in xrange(4):
			l2 = r2_file.readline()
			sys.stdout.write(l2)
		if not l1 or not l2:
			break	
	r1_file.close()
	r2_file.close()

###################################################################### /MAIN ###
################################################################################
